# cloudbread-unified-ingress.yaml
# 모든 서비스를 위한 통합 Ingress

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloudbread-unified-ingress
  namespace: backend
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: cloudbread.133.186.213.185.nip.io
    http:
      paths:
      # AI Services - Food Recommend
      - path: /api/food(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: food-recommend-server-service
            port:
              number: 80
      # AI Services - Chatbot
      - path: /api/chatbot(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: chatbot-server-service
            port:
              number: 80
      # Backend - Main API (default)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cloudbread-backend-svc
            port:
              number: 80
---
# AI Services용 ExternalName Services (cross-namespace 접근)
apiVersion: v1
kind: Service
metadata:
  name: food-recommend-server-service
  namespace: backend
spec:
  type: ExternalName
  externalName: food-recommend-server-service.ai-services.svc.cluster.local
  ports:
  - port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: chatbot-server-service
  namespace: backend
spec:
  type: ExternalName
  externalName: chatbot-server-service.ai-services.svc.cluster.local
  ports:
  - port: 80

